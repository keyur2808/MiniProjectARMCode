<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\Lcd.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\Lcd.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Wed Aug 10 12:55:32 2011
<BR><P>
<H3>Maximum Stack Usage =         20 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; LCD_setpos &rArr; lcd_command
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b47658]">Reset_Handler</a>
 <LI><a href="#[b478b0]">Undef_Handler</a>
 <LI><a href="#[b47874]">SWI_Handler</a>
 <LI><a href="#[b47838]">PAbt_Handler</a>
 <LI><a href="#[b477fc]">DAbt_Handler</a>
 <LI><a href="#[b477c0]">IRQ_Handler</a>
 <LI><a href="#[b47784]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[b478b0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b478b0]">Undef_Handler</a><BR>
 <LI><a href="#[b47874]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b47874]">SWI_Handler</a><BR>
 <LI><a href="#[b47838]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b47838]">PAbt_Handler</a><BR>
 <LI><a href="#[b477fc]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b477fc]">DAbt_Handler</a><BR>
 <LI><a href="#[b477c0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b477c0]">IRQ_Handler</a><BR>
 <LI><a href="#[b47784]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b47784]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[b47658]">Reset_Handler</a>
 <LI><a href="#[b478b0]">Undef_Handler</a>
 <LI><a href="#[b47874]">SWI_Handler</a>
 <LI><a href="#[b47838]">PAbt_Handler</a>
 <LI><a href="#[b477fc]">DAbt_Handler</a>
 <LI><a href="#[b477c0]">IRQ_Handler</a>
 <LI><a href="#[b47784]">FIQ_Handler</a>
 <LI><a href="#[b4680c]">__main</a>
 <LI><a href="#[b46938]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b47658]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b4680c]"></a>__main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[b462e4]"></a>_main_stk</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[b461f4]"></a>_main_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b45f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b461b8]"></a>__main_after_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[b45f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b460c8]"></a>_main_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[b46b54]"></a>delay</STRONG> (ARM, 52 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b46974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
</UL>

<P><STRONG><a name="[b46b18]"></a>wait_lcd</STRONG> (ARM, 120 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b46aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data
<LI><a href="#[b46adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command
</UL>

<P><STRONG><a name="[b46adc]"></a>lcd_command</STRONG> (ARM, 132 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lcd_command
</UL>
<BR>[Calls]<UL><LI><a href="#[b46b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd
</UL>
<BR>[Called By]<UL><LI><a href="#[b46974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
<LI><a href="#[b469ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_setpos
<LI><a href="#[b46a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>

<P><STRONG><a name="[b46aa0]"></a>lcd_data</STRONG> (ARM, 132 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lcd_data
</UL>
<BR>[Calls]<UL><LI><a href="#[b46b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd
</UL>
<BR>[Called By]<UL><LI><a href="#[b469b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
</UL>

<P><STRONG><a name="[b46a64]"></a>set_lcd_port_output</STRONG> (ARM, 88 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b46974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
</UL>

<P><STRONG><a name="[b46a28]"></a>lcd_clear</STRONG> (ARM, 16 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_clear &rArr; lcd_command
</UL>
<BR>[Calls]<UL><LI><a href="#[b46adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command
</UL>
<BR>[Called By]<UL><LI><a href="#[b46974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
</UL>

<P><STRONG><a name="[b469ec]"></a>LCD_setpos</STRONG> (ARM, 88 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_setpos &rArr; lcd_command
</UL>
<BR>[Calls]<UL><LI><a href="#[b46adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command
</UL>
<BR>[Called By]<UL><LI><a href="#[b46938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b469b0]"></a>lcd_putstring</STRONG> (ARM, 40 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lcd_putstring &rArr; lcd_data
</UL>
<BR>[Calls]<UL><LI><a href="#[b46aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data
</UL>
<BR>[Called By]<UL><LI><a href="#[b46938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b46974]"></a>init_lcd</STRONG> (ARM, 56 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = init_lcd &rArr; lcd_clear &rArr; lcd_command
</UL>
<BR>[Calls]<UL><LI><a href="#[b46a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[b46a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_lcd_port_output
<LI><a href="#[b46adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command
<LI><a href="#[b46b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[b46938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b46938]"></a>main</STRONG> (ARM, 44 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = main &rArr; LCD_setpos &rArr; lcd_command
</UL>
<BR>[Calls]<UL><LI><a href="#[b46974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
<LI><a href="#[b469b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[b469ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_setpos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[b45f9c]"></a>__scatterload</STRONG> (ARM, 40 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b461b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[b461f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b45f60]"></a>__scatterload_rt2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[b45c18]"></a>__scatterload_copy</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b45c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[b45c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b45bdc]"></a>__scatterload_null</STRONG> (ARM, 4 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b45ba0]"></a>__scatterload_zeroinit</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b478b0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b478b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b478b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b47874]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b47874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b47874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b47838]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b47838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b47838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b477fc]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b477fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b477fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b477c0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b477c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b477c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b47784]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b47784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b47784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
